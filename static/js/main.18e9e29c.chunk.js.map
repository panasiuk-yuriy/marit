{"version":3,"sources":["store/actions.js","components/FormDialog.js","components/Person.js","components/RaceList.js","store/selectors.js","components/RaceColumns.js","App.js","store/rootReducer.js","store/store.js","index.js"],"names":["ACTION_TYPES","loadData","dispatch","ws","WebSocket","onopen","alert","send","cmd","onmessage","message","data","JSON","parse","type","payload","saveData","onclose","event","wasClean","code","reason","FormDialog","isEdit","text","name","handleSave","handleClose","useState","newName","setNewName","isError","setIsError","close","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","error","helperText","autoFocus","label","fullWidth","value","onChange","e","target","DialogActions","Button","onClick","color","length","Person","item","useDispatch","setIsEdit","className","Avatar","IconButton","edge","aria-label","changePersonName","RaceList","race","raceList","Fab","size","addNewPerson","map","getList","state","list","races","RaceColumns","useSelector","LinearProgress","App","useEffect","initialState","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","filter","newPerson","Date","now","applyMiddleware","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18e9e29c.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_DATA: 'SAVE_DATA',\n  DELETE_PERSON: 'DELETE_PERSON',\n  CHANGE_PERSON_NAME: 'CHANGE_PERSON_NAME',\n  ADD_NEW_PERSON: 'ADD_NEW_PERSON',\n};\n\nconst saveData = data => ({\n  type: ACTION_TYPES.SAVE_DATA, payload: data,\n});\n\nexport const deletePerson = id => ({\n  type: ACTION_TYPES.DELETE_PERSON, payload: id,\n});\n\nexport const changePersonName = (id, newName) => ({\n  type: ACTION_TYPES.CHANGE_PERSON_NAME, id, payload: newName,\n});\n\nexport const addNewPerson = (race, newName) => ({\n  type: ACTION_TYPES.ADD_NEW_PERSON, race, name: newName,\n});\n\nexport const loadData = () => (dispatch) => {\n  const ws = new WebSocket('wss://testapi.marit.expert:3004');\n\n  ws.onopen = () => {\n    alert(\"[open] Соединение установлено\");\n    ws.send({ cmd: 'get_list' });\n  };\n\n  ws.onmessage = (message) => {\n    const data = JSON.parse(message.data);\n    alert(`[message] Данные получены с сервера: ${message}`);\n    dispatch(saveData(data));\n  };\n\n  ws.onclose = function(event) {\n    if (event.wasClean) {\n      alert(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\n    } else {\n      alert('[close] Соединение прервано');\n    }\n  };\n};\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const FormDialog = ({isEdit, text, type, name, handleSave, handleClose}) => {\n  const [newName , setNewName] = useState(name || '');\n  const [isError, setIsError] = useState(false);\n  \n  const handleChange = (value) => {\n    setNewName(value);\n    setIsError(false)\n  }\n\n  const close = () => {\n    setNewName(name);\n    handleClose();\n  }\n\n  const save = () => {\n    if(newName.length === 0) {\n      setIsError(true);\n      return\n    }\n    handleSave(newName);\n    if (type === 'addNew'){\n      setNewName('');\n    }\n  }\n\n  return (\n    <div>\n      <Dialog open={isEdit} onClose={close} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle \n          id=\"form-dialog-title\"\n        >\n          {text}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            error={isError}\n            helperText={isError ? \"Field must'n be empty\" : null}\n            autoFocus\n            id=\"name\"\n            label=\"New Name\"\n            fullWidth\n            value={newName}\n            onChange={e => handleChange(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={close} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={save} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deletePerson, changePersonName } from '../store/actions';\nimport { FormDialog } from './FormDialog';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\n\nexport const Person = ({ item }) => {\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n\n  const startEdit = () => {\n    setIsEdit(true);\n  };\n\n  const handleClose = () => {\n    setIsEdit(false);\n  };\n\n  const handleSave = (newName) => {\n    dispatch(changePersonName(item.id, newName));\n    setIsEdit(false);\n  };\n\n  return (\n    <>\n      <div className=\"person\">\n        <div className=\"person__info\">\n          <Avatar>\n            <PermIdentityIcon />\n          </Avatar>\n          <p>{item.name}</p>\n        </div>\n        <div className=\"person__controls\">\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => startEdit()}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(deletePerson(item.id))}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      </div>\n      <FormDialog\n        isEdit={isEdit}\n        text={`Change the ${item.name}`}\n        name={item.name}\n        handleSave={handleSave}\n        handleClose={handleClose}\n      />\n    </>\n\n  );\n};\n","import React, {useState} from 'react';\nimport { useDispatch} from 'react-redux';\nimport {addNewPerson } from '../store/actions';\nimport { Person } from './Person';\nimport {FormDialog} from './FormDialog';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport const RaceList = ({ race, raceList }) => {\n  \n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n  \n  const closeDialog = () => {\n    setIsEdit(false);\n  }\n\n  const handleSave = (newName) => {\n    dispatch(addNewPerson(race, newName));\n    setIsEdit(false);\n  };\n\n  return (\n    <>\n    <div className='column__top'>\n      <h3 className=\"header\">{race}</h3>\n      <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={() => setIsEdit(true)}>\n        <AddIcon />\n      </Fab>\n    </div>\n     \n    <FormDialog\n      type=\"addNew\"\n      isEdit={isEdit}\n      text={`Add new ${race}`}\n      handleClose={closeDialog}\n      handleSave={handleSave}\n    />\n      { raceList.map((item) => {\n        if (race === item.race) {\n          return (\n            <Person item={item} key={item.id} />\n          );\n        }\n\n        return null;\n      })\n      }\n    </>\n  );\n};\n","export const getList = state => state.list;\n\n\n","import React from 'react';\nimport { RaceList } from './RaceList';\nimport { useSelector } from 'react-redux';\nimport { getList } from '../store/selectors';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst races = ['Hobbit', 'Human', 'Dworf', 'Elf'];\n\nexport const RaceColumns = () => {\n  const raceList = useSelector(getList);\n  if (raceList.length === 0) {\n    return <LinearProgress />\n  } else {\n    return (\n      <div className=\"container\">\n        {races.map(race => (\n          <div className=\"column\" key={race}>\n            <RaceList race={race} raceList={raceList} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n \n}\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loadData } from './store/actions';\n\nimport { RaceColumns } from './components/RaceColumns';\nimport './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadData());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <RaceColumns />\n    </div>\n  )\n};\n\nexport default App;\n","import { ACTION_TYPES } from './actions';\n\nconst initialState = {\n  list: [],\n};\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_DATA: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        list: [...state.list, ...payload],\n      };\n    }\n\n    case ACTION_TYPES.DELETE_PERSON: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        list: state.list.filter(item => item.id !== payload),\n      };\n    }\n\n    case ACTION_TYPES.CHANGE_PERSON_NAME: {\n      const { payload, id } = action;\n\n      return {\n        ...state,\n        list: state.list.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              name: payload,\n            };\n          }\n\n          return item;\n        }),\n      };\n    }\n\n    case ACTION_TYPES.ADD_NEW_PERSON: {\n      const { race, name } = action;\n      const newPerson = {\n        id: Date.now(),\n        name,\n        race\n      }\n      return {\n        ...state,\n        list: [...state.list, newPerson]\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\n\nconst middlewares = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport { store } from './store/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}